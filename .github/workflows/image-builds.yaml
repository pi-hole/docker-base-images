name: debian-base builds
on:
  pull_request:
  push:
    tags:
      - "**"
  workflow_dispatch:
  schedule:
    # 2:30am UTC every Sunday, has no particular significance
    - cron: "30 2 * * 0"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        DEBIAN_VERSION: [stretch,buster,bullseye]
    steps:
      -
        name: Checkout Repo
        uses: actions/checkout@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ secrets.DOCKERHUB_NAMESPACE }}/debian-base
            ghcr.io/${{ github.repository_owner }}/debian-base
          flavor: |
            latest=${{ matrix.DEBIAN_VERSION == 'buster' && ( startsWith(github.ref, 'refs/tags/') || github.event_name == 'schedule' ) }}
          tags: |
            type=ref,event=tag,suffix=-${{ matrix.DEBIAN_VERSION }}
            type=ref,event=branch,suffix=-${{ matrix.DEBIAN_VERSION }},enable=${{ github.event_name != 'schedule' }}
            type=ref,event=pr,suffix=-${{ matrix.DEBIAN_VERSION }}
            type=raw,value=${{matrix.DEBIAN_VERSION}},enable=${{ startsWith(github.ref, 'refs/tags/') || github.event_name == 'schedule' }}
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: debian-base/.
          build-args: |
            DEBIAN_VERSION=${{ matrix.DEBIAN_VERSION }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=${{ matrix.DEBIAN_VERSION }}
          cache-to: type=gha,scope=${{ matrix.DEBIAN_VERSION }},mode=max
