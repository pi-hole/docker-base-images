name: ftl-build builds
on:
  pull_request:
    paths:
      - 'ftl-build/**'
      - '.github/workflows/ftl-build.yml'
  push:
    tags:
      - "**"
    paths:
      - 'ftl-build/**'
      - '.github/workflows/ftl-build.yml'
      - '.github/actions/**'
  workflow_dispatch:
  schedule:
    # 1:30am UTC every Sunday, has no particular significance
    - cron: "30 1 * * 0"

env:
  DOCKER_REGISTRY_IMAGE: ${{ secrets.DOCKERHUB_NAMESPACE }}/ftl-build
  GITHUB_REGISTRY_IMAGE: ghcr.io/${{ github.repository_owner }}/ftl-build

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: linux/amd64
            container: alpine:3.18
          - platform: linux/386
            container: alpine:3.18
          - platform: linux/arm/v6
            container: alpine:3.18
          - platform: linux/arm/v7
            container: alpine:3.18
          - platform: linux/arm64/v8
            container: alpine:3.18
          - platform: linux/riscv64
            container: alpine:edge
    steps:
      -
        name: Checkout Repo
        uses: actions/checkout@v4
      -
        name: Docker meta (Docker Hub and GitHub Container Registry)
        id: meta
        uses: docker/metadata-action@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          images: |
            ${{ env.DOCKER_REGISTRY_IMAGE }},enable=${{ github.event_name != 'workflow_dispatch' }}
            ${{ env.GITHUB_REGISTRY_IMAGE }},enable=${{ github.event_name != 'workflow_dispatch' }}
            foo/bar,enable=${{ github.event_name == 'workflow_dispatch' }}
          tags: |
            type=ref,event=branch,enable=${{ github.event_name != 'schedule' }}
      -
        name: Login to DockerHub and GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: ./.github/actions/login-repo
        with:
          docker_username: ${{ secrets.DOCKERHUB_USER }}
          docker_password: ${{ secrets.DOCKERHUB_PASS }}
          ghcr_username: ${{ github.repository_owner }}
          ghcr_password: ${{ secrets.GITHUB_TOKEN }}
      -
        # Add support for more platforms with QEMU (optional)
        # https://github.com/docker/setup-qemu-action
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build container and test-compile FTL
        uses: docker/build-push-action@v5
        with:
          context: ftl-build
          platforms: ${{ matrix.platform }}
          push: false
          target: tester
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            CONTAINER=${{ matrix.container }}
      -
        name: Push builder target and push by digest (Docker Hub)
        if: github.event_name != 'pull_request'
        id: build_docker
        uses: docker/build-push-action@v5
        with:
          context: ftl-build
          platforms: ${{ matrix.platform }}
          push: ${{ github.event_name != 'workflow_dispatch' }}
          target: builder
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            CONTAINER=${{ matrix.container }}
          outputs: |
            type=image,name=${{ env.DOCKER_REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true
      -
        name: Push builder target and push by digest (GitHub Container Registry)
        if: github.event_name != 'pull_request'
        id: build_ghcr
        uses: docker/build-push-action@v5
        with:
          context: ftl-build
          platforms: ${{ matrix.platform }}
          push: ${{ github.event_name != 'workflow_dispatch' }}
          target: builder
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            CONTAINER=${{ matrix.container }}
          outputs: |
            type=image,name=${{ env.GITHUB_REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true
      -
        name: Export digests
        if: github.event_name != 'pull_request'
        run: |
          mkdir -p /tmp/digests/dockerhub
          mkdir -p /tmp/digests/ghcr
          digest_docker="${{ steps.build_docker.outputs.digest }}"
          touch "/tmp/digests/dockerhub/${digest_docker#sha256:}"
          digest_ghcr="${{ steps.build_ghcr.outputs.digest }}"
          touch "/tmp/digests/ghcr/${digest_ghcr#sha256:}"
      -
        name: Upload digest
        if: github.event_name != 'pull_request'
        uses: actions/upload-artifact@v3
        with:
          name: digests
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  # Merge all the digests into a single file
  # If we would push immediately above, the individual runners would overwrite each other's images
  # https://docs.docker.com/build/ci/github-actions/multi-platform/#distribute-build-across-multiple-runners
  merge-and-deploy:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    needs:
      - build-and-test
    steps:
      -
        name: Checkout Repo
        uses: actions/checkout@v4
      -
        name: Download digests
        uses: actions/download-artifact@v4
        with:
          name: digests
          path: /tmp/digests
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to DockerHub and GitHub Container Registry
        uses: ./.github/actions/login-repo
        with:
          docker_username: ${{ secrets.DOCKERHUB_USER }}
          docker_password: ${{ secrets.DOCKERHUB_PASS }}
          ghcr_username: ${{ github.repository_owner }}
          ghcr_password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Collect and push (Docker Hub)
        uses: ./.github/actions/merge-and-push
        with:
          imagename: ${{ env.DOCKER_REGISTRY_IMAGE }}
          registry: dockerhub
      -
        name: Collect and push (GitHub Container Registry)
        uses: ./.github/actions/merge-and-push
        with:
          imagename: ${{ env.GITHUB_REGISTRY_IMAGE }}
          registry: ghcr
